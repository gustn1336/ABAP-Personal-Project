*&---------------------------------------------------------------------*
*& Include          ZM_LHS_HR1F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form CHECK_ID
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CHECK_ID .

  IF NOT SY-UNAME = 'EDU20'.
    GV_ERROR = 'X'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F4_FILE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- P_FILE
*&---------------------------------------------------------------------*
FORM F4_FILE  CHANGING PV_FILE.

* - PREFIX 정의 - FORM PARAMETER
**   1. PT_  : Internal Table or Ranges
**   2. PS_  : Structure
**   3. PV_  : Variables
**   4. PR_ : Reference Variables

  DATA: LT_FILE_TABLE TYPE FILETABLE,    "테이블 타입은 테이블을 만들때 타입을 사용해서 할 수 있음. 스트럭처를 사용해서 테이블을 만들때도 스트럭처에서 테이블타입을 만든 다음에 테이블을 만드는 형식
        LS_FIEL_TABLE TYPE FILE_TABLE.

  DATA: LV_SUBRC  TYPE I,
        LV_ACTION TYPE I.

  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG "창을 띄우는 것.
    EXPORTING
      WINDOW_TITLE            = 'File Path' "윈도우  이름.
      DEFAULT_FILENAME        = ''
      FILE_FILTER             =
                                'Excel files (*.XLSX)|*.XLSX| Excel files (*.XLS)|*.XLS| ' "파일 형식, 지금은 엑셀
*      Excel files (*.XLS)|*.XLS| Excel files (*.XLSX)|*.XLSX|'
      INITIAL_DIRECTORY       = 'C:\' "처음 뜨는 폴더
      MULTISELECTION          = ' ' "중복 올리기
    CHANGING
      FILE_TABLE              = LT_FILE_TABLE "선택한 파일 경로 이름
      RC                      = LV_SUBRC     "에러가 맞냐 아니냐
      USER_ACTION             = LV_ACTION    "열기 취소버튼                                우리가 받을 값들.
    EXCEPTIONS
      FILE_OPEN_DIALOG_FAILED = 1 "오류들 정의
      CNTL_ERROR              = 2
      ERROR_NO_GUI            = 3.   "창 띄우는 것.

  CALL METHOD CL_GUI_CFW=>FLUSH.

  CASE LV_ACTION. "  OK면 0, 캔슬이면 9.

    WHEN  CL_GUI_FRONTEND_SERVICES=>ACTION_OK. "OK를 눌렀나, 캔슬을 눌렀나

      READ TABLE LT_FILE_TABLE INDEX 1 INTO LS_FIEL_TABLE.
      PV_FILE = LS_FIEL_TABLE.

    WHEN CL_GUI_FRONTEND_SERVICES=>ACTION_CANCEL.
      EXIT.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCELUPLOAD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCELUPLOAD .

  CLEAR :GV_ERROR.

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE' "엑셀의 내용을 가져오는 펑션
    EXPORTING
      FILENAME                = P_FILE
      I_BEGIN_COL             = 1         "Excel file start col     "
      I_BEGIN_ROW             = 2         "Excel file start row  "
      I_END_COL               = 100
      I_END_ROW               = 50000
    TABLES
      INTERN                  = GT_INTERN                            "
    EXCEPTIONS
      INCONSISTENT_PARAMETERS = 1 "
      UPLOAD_OLE              = 2
      OTHERS                  = 3.

  IF SY-SUBRC <> 0. "not equel
    MESSAGE S012 WITH TEXT-M02.
    GV_ERROR = ABAP_TRUE.
    EXIT.
  ENDIF.
  "스텐다드 메세지, 굳이 없어도 됨.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_IT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_IT_DATA .

  DESCRIBE TABLE GT_INTERN LINES SY-TFILL. "인터널 테이블의 데이터 건수를 읽음. 시스템 변수, 인터널 테이블의 로우 개수
  "현재 개수는 20, 값들을 하나씩 들고옴.

  IF SY-TFILL EQ 0. "가져온 개수가 0이냐? 데이터가 없냐?
    MESSAGE S012 WITH TEXT-M02. " 만들어진 데이터가 없음.
    GV_ERROR = ABAP_TRUE. " 에러라고 찍어줌
    EXIT.
  ELSE.

*-- Excel file -> itab
    PERFORM EXCEL_TO_ITAB.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCEL_TO_ITAB
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCEL_TO_ITAB .

  DATA: LT_DBTAB TYPE TABLE OF Z20_HR1 WITH HEADER LINE.
  DATA: LS_EX1TA TYPE Z20_HR1. "스트럭쳐
  DATA: LT_DD07V TYPE TABLE OF DD07V WITH HEADER LINE.

  FIELD-SYMBOLS: <FS_COL>.

  CLEAR: GT_DATA,    GT_DATA[].

  LOOP AT GT_INTERN.

*    ADD 1 TO GT_INTERN-COL.

    ASSIGN COMPONENT GT_INTERN-COL OF STRUCTURE "INTERN-COL 필드의 순서를 의미함. GT_DATA의 1, 2, 3, 4번째  필드
                                   GT_DATA TO <FS_COL>. "

    <FS_COL> = GT_INTERN-VALUE.
    "t_data-zyear = GT_INTERN-VALUE. 컬럼값이 2가 됨.

    AT END OF ROW. "ROW라는 필드가 끝날 때(반복되는 것이 끝날 때) 로우의 값이 바뀌기 전, 그때 어펜드가 됨. 키 값들은 바뀌지 않아야 함.
      "무저건 소팅이 되어 있어야 하며, 다음값을 체크함.
      APPEND GT_DATA.
      CLEAR  GT_DATA.
    ENDAT.

  ENDLOOP.


  CALL FUNCTION 'DD_DOMVALUES_GET' "도메인을 읽어오는 펑션.
    EXPORTING
      DOMNAME        = 'ZD_ERANK' "도메인 이름
      LANGU          = SY-LANGU " 랭귀지. 로그인 언어.
      TEXT           = 'X' "텍스트를 가져올 것인가?
    TABLES
      DD07V_TAB      = LT_DD07V "도메인들을 담을 테이블.
    EXCEPTIONS
      WRONG_TEXTFLAG = 1
      OTHERS         = 2.

  " 값이 테이블 형식으로 들어갔음.

  LOOP AT GT_DATA.    "헤더가 첫번재부터 돌아감. 헤더가 다른 말로 워크 에어리어
    MOVE-CORRESPONDING GT_DATA TO LT_DBTAB. "gt테이블 헤더에서 LT테이블 헤더로 옮겨줌.

    SELECT SINGLE *                                   "체킹, 기존의 키값으로 동일한 키값이 있냐 없냐, 싱글로 하면 하나만 들고옴, 스트록쳐로 사용 가능
      INTO LS_EX1TA
      FROM Z20_HR1
    WHERE EMP_NO EQ LT_DBTAB-EMP_NO.
    IF SY-SUBRC EQ 0.
      LT_DBTAB-ERDAT = LS_EX1TA-ERDAT.
      LT_DBTAB-ERNAME = LS_EX1TA-ERNAME.
      LT_DBTAB-ERTIM = LS_EX1TA-ERTIM.
      LT_DBTAB-AEDAT = SY-DATUM.            "동일할시
      LT_DBTAB-AENAME = SY-UNAME.
      LT_DBTAB-AETIM = SY-UZEIT.
    ELSE.
      LT_DBTAB-ERDAT = SY-DATUM.  "시스템 날자
      LT_DBTAB-ERNAME = SY-UNAME.  " 유저아이디
      LT_DBTAB-ERTIM = SY-UZEIT.    "생성된 시간.
      LT_DBTAB-AEDAT = SY-DATUM.    "수정정보들. 수정된 날짜
      LT_DBTAB-AENAME = SY-UNAME.   "수정된 아이디
      LT_DBTAB-AETIM = SY-UZEIT.     "수정된 생성.
    ENDIF.

    READ TABLE LT_DD07V WITH KEY DOMVALUE_L = LT_DBTAB-EMP_SEQ.
    "재직번호가 가져온 테이블의 값에 있나?
    IF SY-SUBRC EQ 0.
      LT_DBTAB-EMP_RANK = LT_DD07V-DDTEXT.
    ENDIF.

    APPEND LT_DBTAB.
    CLEAR LT_DBTAB.

  ENDLOOP.

  DESCRIBE TABLE GT_DATA LINES GV_CNT.

  MODIFY Z20_HR1 FROM TABLE LT_DBTAB.
  "모디파이는 인설트+업데이트임. 키에 값이 있으면 업데이트, 없으면 인설트 됨.


  "디비에 있는 테이블에 값을 넣을려면 형태가 똑같아야함. 테이블 타입이 정확히 일치해야함.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  CREATE_LISTBOX  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Form POPUP_TO_CONFIRM
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> TEXT_PT1
*&      --> TEXT_QT1
*&---------------------------------------------------------------------*
FORM POPUP_TO_CONFIRM  USING     PV_TITLE PV_QUEST.

  "-- call popup
  CALL FUNCTION 'POPUP_TO_CONFIRM' "팝업만드는 펑션
    EXPORTING
      TITLEBAR       = PV_TITLE "TEXT-PT1
*     DIAGNOSE_OBJECT             = ' '
      TEXT_QUESTION  = PV_QUEST "TEXT-QT1
*     TEXT_BUTTON_1  = 'Ja'(001)
*     ICON_BUTTON_1  = ' '
*     TEXT_BUTTON_2  = 'Nein'(002)
*     ICON_BUTTON_2  = ' '
*     DEFAULT_BUTTON = '1'
*     DISPLAY_CANCEL_BUTTON       = 'X'
*     USERDEFINED_F1_HELP         = ' '
*     START_COLUMN   = 25
*     START_ROW      = 6
*     POPUP_TYPE     =
*     IV_QUICKINFO_BUTTON_1       = ' '
*     IV_QUICKINFO_BUTTON_2       = ' '
    IMPORTING
      ANSWER         = GV_ANSWER
*   TABLES
*     PARAMETER      =
    EXCEPTIONS
      TEXT_NOT_FOUND = 1
      OTHERS         = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
    WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form SELECT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SELECT_DATA .

  CLEAR: GT_DISPLAY.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE @GT_DISPLAY
    FROM Z20_HR1
   WHERE EMP_NO  IN @EMP_NO
     AND EMP_NAME IN @EMP_NAME
     AND EMP_SEQ    IN @EMP_SEQ
     AND EMP_EVDAY     IN @EMP_EDAY
     AND EMP_EVPOINT   IN @EMP_EP.

  CLEAR GV_ERROR.
  IF GT_DISPLAY[] IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S001 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  CLEAR GV_CNT.
  DESCRIBE TABLE GT_DISPLAY LINES GV_CNT.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_INSTANCE_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_INSTANCE_0100 .

  CREATE OBJECT GR_CON1 "
    EXPORTING
      CONTAINER_NAME = GV_CONTAINER. "

  CREATE OBJECT GR_GRID1 "그리드 만들기
    EXPORTING
      I_PARENT = GR_CON1. " 그리드는 항상 컨테이너 위에 올라감. 업어주는 형상.
  "컨테이너
  "그리드가 자식 클래스


ENDFORM.
*&---------------------------------------------------------------------*
*& Form APPEND_FIELDCAT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM APPEND_FIELDCAT_0100 .

  DATA: LV_DYNNR TYPE SY-DYNNR.
  LV_DYNNR = SY-DYNNR.

  "-- field catalog data
  "   field catalog merge or set fieldcatalog를 사용할 수 있음.

  "{ FIELDCATLOG MERGE 사용
  PERFORM GET_FIELDCATLOG_DATA USING LV_DYNNR.

  PERFORM MODIFY_FIELDCATLOG_DATA.
  "}


ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_FIELDCATLOG_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> LV_DYNNR
*&---------------------------------------------------------------------*
FORM GET_FIELDCATLOG_DATA   USING    P_DYNNR.

  DATA: LT_FIELDCAT TYPE KKBLO_T_FIELDCAT. "
  DATA: LV_TABNAME  TYPE DD02L-TABNAME.


  LV_TABNAME = 'GT_DISPLAY'.




  CALL FUNCTION 'K_KKB_FIELDCAT_MERGE' "
    EXPORTING
      I_CALLBACK_PROGRAM     = SY-REPID "
      I_TABNAME              = LV_TABNAME "
    " I_STRUCNAME            = 'ZEDU20_EX0ST' "ABAP DIC. 정의된 STRUCTURE
      I_BYPASSING_BUFFER     = ABAP_TRUE "버퍼에 올림. 필드가 바뀌면 갱신하기 위해서
      I_INCLNAME             = SY-REPID ""
    CHANGING
      CT_FIELDCAT            = LT_FIELDCAT[]
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      OTHERS                 = 2.

  IF SY-SUBRC EQ 0.

    "-- Trasnfer LVC.
    CALL FUNCTION 'LVC_TRANSFER_FROM_KKBLO' "
      EXPORTING
        IT_FIELDCAT_KKBLO = LT_FIELDCAT[]
      IMPORTING
        ET_FIELDCAT_LVC   = GT_FIELDCAT[] "AVL 타입으로 컨버전을 하는 것..
      EXCEPTIONS
        IT_DATA_MISSING   = 1.
  ELSE.

    " Error Fieldcatalog merge!!
    MESSAGE E000 WITH 'Error Fieldcatalog merge!!'.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form DISPLAY_ALV_GRID_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY_ALV_GRID_0100 .


  GS_VARIANT-REPORT = SY-REPID. "현재 프로그램.

  GV_SAVE = 'A'. "ALV의 레이아웃을 어떤식으로 저장할 것이냐.

  "*-- Build field catalog for the alv control
  CALL METHOD GR_GRID1->SET_TABLE_FOR_FIRST_DISPLAY "
  "그리드를 스크린에 불러옴.
    EXPORTING
      I_DEFAULT                     = ABAP_TRUE
      IS_LAYOUT                     = GS_LAYOUT
      IS_VARIANT                    = GS_VARIANT
      I_SAVE                        = GV_SAVE
      IT_TOOLBAR_EXCLUDING          = GT_EXCLUDE " 기능버튼을 뺄때.
    CHANGING
      IT_FIELDCATALOG               = GT_FIELDCAT "
      IT_SORT                       = GT_SORT
      IT_OUTTAB                     = GT_DISPLAY[]
    EXCEPTIONS
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3.

  IF SY-SUBRC NE 0.
    MESSAGE E000(0K) WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form MODIFY_FIELDCATLOG_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM MODIFY_FIELDCATLOG_DATA .


  DATA:  LV_TEXT(50).

  "--- Change Fieldcat.
  LOOP AT GT_FIELDCAT INTO GS_FIELDCAT.
    CLEAR: LV_TEXT.

    "-- Change fieldcat Attribute
    CASE GS_FIELDCAT-FIELDNAME.
      WHEN 'CHECK'.
        LV_TEXT = TEXT-F01.
        GS_FIELDCAT-CHECKBOX = 'X'.
        GS_FIELDCAT-EDIT = 'X'. "수정가능.
      WHEN 'EMP_NO'.
        LV_TEXT = TEXT-F03.
        GS_FIELDCAT-KEY = 'X'.
      WHEN 'EMP_DEPT'.
        LV_TEXT = TEXT-F04.
      WHEN 'EMP_RANK'.
        LV_TEXT = TEXT-F05.
      WHEN 'EMP_NAME'.
        LV_TEXT = TEXT-F06.
      WHEN 'EMP_YEARPAY'.
        LV_TEXT = TEXT-F07.
      WHEN 'EMP_EVMON'.
        LV_TEXT = TEXT-F08.
      WHEN 'EMP_EVDAY '.
        LV_TEXT = TEXT-F09.
      WHEN 'EMP_EVPOINT'.
        LV_TEXT = TEXT-F10.
      WHEN 'ERNAME'.
        LV_TEXT = TEXT-F11.
      WHEN 'ERDAT'.
        LV_TEXT = TEXT-F12.
      WHEN 'ERTIM'.
        LV_TEXT = TEXT-F13.
      WHEN 'AENAME'.
        LV_TEXT = TEXT-F14.
      WHEN 'AEDAT'.
        LV_TEXT = TEXT-F15.
      WHEN 'AETIM'.
        LV_TEXT = TEXT-F16.
      WHEN 'EMP_SEQ'.
        LV_TEXT = TEXT-F17.

      WHEN OTHERS.
*        GS_FIELDCAT-NO_OUT = ABAP_TRUE.
    ENDCASE.
    "Column Optimizer
    GS_FIELDCAT-COL_OPT = ABAP_TRUE.

    "-- Common attribute
    IF LV_TEXT IS NOT INITIAL.
      GS_FIELDCAT-COLTEXT   = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_L = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_M = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_S = LV_TEXT.
    ENDIF.

    MODIFY GT_FIELDCAT FROM GS_FIELDCAT.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REFRESH_GRID_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM REFRESH_GRID_0100 .

  GS_STABLE-ROW = ABAP_TRUE. "Row
  GS_STABLE-COL = ABAP_TRUE. "column

  CALL METHOD GR_GRID1->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = GS_STABLE
      I_SOFT_REFRESH = SPACE.

  CALL METHOD CL_GUI_CFW=>FLUSH.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form INIT_LAYOUT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM INIT_LAYOUT_0100 .

  GS_LAYOUT-ZEBRA      = ABAP_TRUE.  "줄무늬를 줌. 얼룩말

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHECK_FEILD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CHECK_FEILD .

  CLEAR : GV_ERROR.

  IF ENO-LOW IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M11 DISPLAY LIKE 'E'.

  ELSEIF NAME-LOW IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M12 DISPLAY LIKE 'E'.

  ELSEIF DEPT-LOW IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M13 DISPLAY LIKE 'E'.

  ELSEIF SEQ-LOW IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M14 DISPLAY LIKE 'E'.

  ELSEIF NYEAR-LOW IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M15 DISPLAY LIKE 'E'.



  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_DATA .

  CLEAR GV_ERROR.
  DATA: LV_EMPNO TYPE Z20_HR1-EMP_NO.
  DATA : LS_Z20_HR1 TYPE Z20_HR1.

  DATA: GS_CREA TYPE Z20_HR1.
  DATA: LV_MON TYPE CHAR10.
  CONCATENATE SY-DATUM(4) '년' SY-DATUM+4(2) '월' INTO LV_MON.


  "데이터 있는지 체크
  SELECT SINGLE EMP_NO
    INTO LV_EMPNO
    FROM Z20_HR1
    WHERE EMP_NO EQ ENO-LOW.

  IF SY-SUBRC EQ 0.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-E01 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

  GS_CREA-EMP_NO = ENO-LOW.
  GS_CREA-EMP_NAME = NAME-LOW.
  GS_CREA-EMP_DEPT  = DEPT-LOW.
  GS_CREA-EMP_SEQ = SEQ-LOW.
  GS_CREA-EMP_EVPOINT = EP-LOW.
  GS_CREA-EMP_YEARPAY = NYEAR-LOW.


  IF GS_CREA-EMP_EVPOINT IS INITIAL.
    GS_CREA-EMP_EVDAY = ''.
    GS_CREA-EMP_EVMON = ''.
  ELSE.
    GS_CREA-EMP_EVDAY = SY-DATUM.
    GS_CREA-EMP_EVMON = LV_MON.
  ENDIF.

  GS_CREA-ERNAME = SY-UNAME.
  GS_CREA-ERDAT = SY-DATUM.
  GS_CREA-ERTIM = SY-UZEIT.
  GS_CREA-AENAME = SY-UNAME.
  GS_CREA-AEDAT = SY-DATUM.
  GS_CREA-AETIM = SY-UZEIT.

  MOVE-CORRESPONDING GS_CREA TO LS_Z20_HR1. "
  INSERT Z20_HR1 FROM LS_Z20_HR1. "인설트를 할때 데



*MOVE-CORRESPONDING GS_CREA TO  LS_Z20_HR1.
*  INSERT Z20_HR1 FROM  LS_Z20_HR1. "인설트를 할때 데이ㅣ터 형식이 정확히 일치해야함. 그래서 테이블에 담고 인설트해줌.
*IF SY-SUBRC EQ 0.
*  CALL FUNCTION 'POPUP_TO_CONFIRM'
*    EXPORTING
*     TITLEBAR                    = '입사 확인'
*     DIAGNOSE_OBJECT             = ' '
*      TEXT_QUESTION               = ''
*     TEXT_BUTTON_1               = '입사 정보 확인하기'
*     ICON_BUTTON_1               = ' '
*     TEXT_BUTTON_2               = 'Nein'(002)
*     ICON_BUTTON_2               = ' '
*     DEFAULT_BUTTON              = '1'
*     DISPLAY_CANCEL_BUTTON       = 'X'
*     USERDEFINED_F1_HELP         = ' '
*     START_COLUMN                = 25
*     START_ROW                   = 6
*     POPUP_TYPE                  = ''
*     IV_QUICKINFO_BUTTON_1       = ' '
*     IV_QUICKINFO_BUTTON_2       = ' '
**   IMPORTING
**     ANSWER                      = ' '
**   TABLES
**     PARAMETER                   = ''
*   EXCEPTIONS
*     TEXT_NOT_FOUND              = 1
*     OTHERS                      = 2
*            .
*  IF SY-SUBRC <> 0.
** Implement suitable error handling here
*  ENDIF.

*     MESSAGE S014 WITH TEXT-E01.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form CLEAR_SO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CLEAR_SO .

  CLEAR: ENO-LOW ,NAME-LOW, DEPT-LOW, SEQ-LOW, EP-LOW, NYEAR-LOW.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form POPUP_TO_CONFIRM3
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> TEXT_PT3
*&      --> TEXT_QT3
*&---------------------------------------------------------------------*
FORM POPUP_TO_CONFIRM3  USING    P_TEXT_PT3
                                 P_TEXT_QT3.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REGIST_ALV_EVENT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
FORM REGIST_ALV_EVENT_0100  USING PR_GRID TYPE REF TO CL_GUI_ALV_GRID.
* REGISTER EVENT
  CALL METHOD PR_GRID->REGISTER_EDIT_EVENT
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.

*  CALL METHOD PR_GRID->SET_READY_FOR_INPUT
*    EXPORTING
*      I_READY_FOR_INPUT = 1.

*-- GR_EVENT_RECEIVER
*  IF GR_EVENT_RECEIVER IS INITIAL.
*    CREATE OBJECT GR_EVENT_RECEIVER.
*  ENDIF.
ENDFORM.

-----------------------------------------------------------
Extracted by Mass Download version1.5.2 - E.G.Mellodew. 1998-2019. Sap Release753
