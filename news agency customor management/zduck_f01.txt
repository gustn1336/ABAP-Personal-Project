*&---------------------------------------------------------------------*
*& Include          ZDUCK_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form INIT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM INIT .

  P_INFO1 = '고객을 등록할 수 있습니다.'.
  P_INFO2 = '정보를 조회할 수 있습니다.'.
  P_INFO3 = '엑셀파일을 업로드 할 수 있습니다.'.

*gv_flug ='x'.


  IF GV_FLUG IS INITIAL.
    CALL SCREEN '0900' STARTING AT 5 5.
  ENDIF.

  DATA: TITLE TYPE CHAR50.
  DATA: BLANK TYPE CHAR10.

  BLANK = ' '.

  CONCATENATE '통신사 고객 관리 프로그램(' SY-DATUM(4) '년' SY-DATUM+4(2) '월' SY-DATUM+6(2) '일' SY-UNAME '님이 실행중)' INTO TITLE.

  SY-TITLE = TITLE.




ENDFORM.
*&---------------------------------------------------------------------*
*& Form MODIFY_SCREEN
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM MODIFY_SCREEN .


  LOOP AT SCREEN.

    IF  SCREEN-NAME = 'P_INFO1'.
      SCREEN-INPUT = '0'.
      MODIFY SCREEN.
    ENDIF.
    IF  SCREEN-NAME = 'P_INFO2'.
      SCREEN-INPUT = '0'.
      MODIFY SCREEN.
    ENDIF.
    IF  SCREEN-NAME = 'P_INFO3'.
      SCREEN-INPUT = '0'.
      MODIFY SCREEN.
    ENDIF.

    CASE SCREEN-GROUP1.
      WHEN 'MD2'.
        IF P_JOIN EQ ABAP_TRUE.
          SCREEN-ACTIVE = '1'. " 1 : 화면에 나타나겠다 :,쓰겠다
        ELSE.
          SCREEN-ACTIVE = '0'.  " 화면에서 사라지게하겠다.
        ENDIF.
        MODIFY SCREEN.

      WHEN 'MD3'.
        IF P_ALV EQ ABAP_TRUE.
          SCREEN-ACTIVE = '1'. " 1 : 화면에 나타나겠다 :,쓰겠다
        ELSE.
          SCREEN-ACTIVE = '0'.  " 화면에서 사라지게하겠다.
        ENDIF.
        MODIFY SCREEN.

      WHEN 'MD4'.
        IF P_ALMOST EQ ABAP_TRUE.
          SCREEN-ACTIVE = '1'. " 1 : 화면에 나타나겠다 :,쓰겠다
        ELSE.
          SCREEN-ACTIVE = '0'.  " 화면에서 사라지게하겠다.
        ENDIF.
        MODIFY SCREEN.

      WHEN 'MD5'.
        IF P_CUS EQ ABAP_TRUE.
          SCREEN-ACTIVE = '1'. " 1 : 화면에 나타나겠다 :,쓰겠다
        ELSE.
          SCREEN-ACTIVE = '0'.  " 화면에서 사라지게하겠다.
        ENDIF.
        MODIFY SCREEN.

      WHEN 'MD6'.
        IF P_PEN EQ ABAP_TRUE.
          SCREEN-ACTIVE = '1'. " 1 : 화면에 나타나겠다 :,쓰겠다
        ELSE.
          SCREEN-ACTIVE = '0'.  " 화면에서 사라지게하겠다.
        ENDIF.
        MODIFY SCREEN.

      WHEN OTHERS.
    ENDCASE.
  ENDLOOP.



ENDFORM.
*&---------------------------------------------------------------------*
*& Form F4_FILE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      <-- P_FILE
*&---------------------------------------------------------------------*
FORM F4_FILE  CHANGING PV_FILE.


* - PREFIX 정의 - FORM PARAMETER
*   1. PT_  : Internal Table or Ranges
*   2. PS_  : Structure
*   3. PV_  : Variables
*   4. PR_ : Reference Variables

  DATA: LT_FILE_TABLE TYPE FILETABLE,
        "테이블 타입은 테이블을 만들때 타입을 사용해서 할 수 있음.
        "스트럭처를 사용해서 테이블을 만들때도 스트럭처에서 테이블타입을 만든 다음에 테이블을 만드는 형식
        LS_FIEL_TABLE TYPE FILE_TABLE.

  DATA: LV_SUBRC  TYPE I,
        LV_ACTION TYPE I.

  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG "창을 띄우는 것.
    EXPORTING
      WINDOW_TITLE            = 'File Path' "윈도우  이름.
      DEFAULT_FILENAME        = ''
      FILE_FILTER             =
                                'Excel files (*.XLSX)|*.XLSX| Excel files (*.XLS)|*.XLS| '
      "파일 형식, 지금은 엑셀
*      Excel files (*.XLS)|*.XLS| Excel files (*.XLSX)|*.XLSX|'
      INITIAL_DIRECTORY       = 'C:\' "처음 뜨는 폴더
      MULTISELECTION          = ' ' "중복 올리기
    CHANGING
      FILE_TABLE              = LT_FILE_TABLE "선택한 파일 경로 이름
      RC                      = LV_SUBRC     "에러가 맞냐 아니냐
      USER_ACTION             = LV_ACTION    "열기 취소버튼
      "                  우리가 받을 값들.
    EXCEPTIONS
      FILE_OPEN_DIALOG_FAILED = 1 "오류들 정의
      CNTL_ERROR              = 2
      ERROR_NO_GUI            = 3.   "창 띄우는 것.

  CALL METHOD CL_GUI_CFW=>FLUSH.

  CASE LV_ACTION. "  OK면 0, 캔슬이면 9.

    WHEN  CL_GUI_FRONTEND_SERVICES=>ACTION_OK. "OK를 눌렀나, 캔슬을 눌렀나

      READ TABLE LT_FILE_TABLE INDEX 1 INTO LS_FIEL_TABLE.
      PV_FILE = LS_FIEL_TABLE.

    WHEN CL_GUI_FRONTEND_SERVICES=>ACTION_CANCEL.
      EXIT.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCELUPLOAD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCELUPLOAD .

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE' "엑셀의 내용을 가져오는 펑션
    EXPORTING
      FILENAME                = P_FILE4
      I_BEGIN_COL             = 1         "Excel file start col     "엑셀은 컬럼과 로우로 되어 있음.
      I_BEGIN_ROW             = 2         "Excel file start row  " 시작하는 세로값, 첫번째는 필드가 나오기 때문에
      I_END_COL               = 100                                       "오른쪽으로 100번째 까지
      I_END_ROW               = 50000                                 "세로로 50000번째 까지 가져옴.
    TABLES
      INTERN                  = GT_INTERN                            "엑셀에서 읽은 데이터를 인터널 테이블로 가져옴
      "ROW COL VALUE식으로 이루어져 있음. 값은 읽는 형태
    EXCEPTIONS
      INCONSISTENT_PARAMETERS = 1 "0이 아닌 값들을 정의 예외처리
      UPLOAD_OLE              = 2
      OTHERS                  = 3.

  IF P_FILE4 ='C:\'. "가져온 개수가 0이냐? 데이터가 없냐?
    MESSAGE S012 WITH TEXT-M02. " 만들어진 데이터가 없음.
    GV_ERROR = ABAP_TRUE. " 에러라고 찍어줌
    EXIT.
  ENDIF.


*  IF SY-SUBRC <> 0. "not equel
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
*  "스텐다드 메세지, 굳이 없어도 됨.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_IT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_IT_DATA .

  DESCRIBE TABLE GT_INTERN LINES SY-TFILL. "인터널 테이블의 데이터 건수를 읽음. 시스템 변수, 인터널 테이블의 로우 개수
  "현재 개수는 20, 값들을 하나씩 들고옴.

  IF SY-TFILL EQ 0. "가져온 개수가 0이냐? 데이터가 없냐?
    MESSAGE S012 WITH TEXT-M01. " 만들어진 데이터가 없음.
    GV_ERROR = ABAP_TRUE. " 에러라고 찍어줌
    EXIT.
  ELSE.
  ENDIF.

*-- Excel file -> itab
  IF P_CUS = ABAP_TRUE.
    PERFORM EXCEL_TO_ITAB.

  ELSEIF P_PEN = ABAP_TRUE.
    PERFORM EXCEL_TO_ITAB2.

  ELSE.
  ENDIF.




ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCEL_TO_ITAB
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCEL_TO_ITAB .


  DATA: LS_DBTAB TYPE ZCUS_LIM.
  DATA: LT_DBTAB LIKE TABLE OF LS_DBTAB.

  DATA: LS_EX5TA TYPE ZCUS_LIM. "스트럭쳐

  FIELD-SYMBOLS: <FS_COL>.

  CLEAR: GS_DATA,    GT_DATA.

  LOOP AT GT_INTERN.

*    ADD 1 TO GT_INTERN-COL.

    ASSIGN COMPONENT GT_INTERN-COL OF STRUCTURE "INTERN-COL 필드의 순서를 의미함. GT_DATA의 1, 2, 3, 4번째  필드
                                   GS_DATA TO <FS_COL>. "

    <FS_COL> = GT_INTERN-VALUE.
    "t_data-zyear = GT_INTERN-VALUE. 컬럼값이 2가 됨.

    AT END OF ROW. "ROW라는 필드가 끝날 때(반복되는 것이 끝날 때) 로우의 값이 바뀌기 전, 그때 어펜드가 됨. 키 값들은 바뀌지 않아야 함.
      "무저건 소팅이 되어 있어야 하며, 다음값을 체크함.
      APPEND GS_DATA TO GT_DATA.
      CLEAR  GS_DATA.
    ENDAT.

  ENDLOOP.

  " 값이 테이블 형식으로 들어갔음.

  LOOP AT GT_DATA INTO GS_DATA.    "헤더가 첫번재부터 돌아감.
    MOVE-CORRESPONDING GS_DATA TO LS_DBTAB. "gt테이블 헤더에서 LT테이블 헤더로 옮겨줌.



    APPEND LS_DBTAB TO LT_DBTAB.
    CLEAR LS_DBTAB.

  ENDLOOP.

  DESCRIBE TABLE GT_DATA LINES GV_CNT.

  MODIFY ZCUS_LIM FROM TABLE LT_DBTAB.
  "모디파이는 인설트+업데이트임. 키에 값이 있으면 업데이트, 없으면 인설트 됨.


  "디비에 있는 테이블에 값을 넣을려면 형태가 똑같아야함. 테이블 타입이 정확히 일치해야함.
  CLEAR GT_INTERN.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form POPUP_TO_CONFIRM
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> TEXT_PT1
*&      --> TEXT_QT1
*&---------------------------------------------------------------------*
FORM POPUP_TO_CONFIRM  USING  PV_TITLE PV_QUEST.


  "-- call popup
  CALL FUNCTION 'POPUP_TO_CONFIRM' "팝업만드는 펑션
    EXPORTING
      TITLEBAR       = PV_TITLE "TEXT-PT1
*     DIAGNOSE_OBJECT             = ' '
      TEXT_QUESTION  = PV_QUEST "TEXT-QT1
*     TEXT_BUTTON_1  = 'Ja'(001)
*     ICON_BUTTON_1  = ' '
*     TEXT_BUTTON_2  = 'Nein'(002)
*     ICON_BUTTON_2  = ' '
*     DEFAULT_BUTTON = '1'
*     DISPLAY_CANCEL_BUTTON       = 'X'
*     USERDEFINED_F1_HELP         = ' '
*     START_COLUMN   = 25
*     START_ROW      = 6
*     POPUP_TYPE     =
*     IV_QUICKINFO_BUTTON_1       = ' '
*     IV_QUICKINFO_BUTTON_2       = ' '
    IMPORTING
      ANSWER         = GV_ANSWER
*   TABLES
*     PARAMETER      =
    EXCEPTIONS
      TEXT_NOT_FOUND = 1
      OTHERS         = 2.

  IF PV_TITLE IS INITIAL.
    MESSAGE S012 WITH TEXT-M02. "
  ENDIF.

  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
    WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCELUPLOAD2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCELUPLOAD2 .

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE' "엑셀의 내용을 가져오는 펑션
    EXPORTING
      FILENAME                = P_FILE5
      I_BEGIN_COL             = 1         "Excel file start col     "엑셀은 컬럼과 로우로 되어 있음.
      I_BEGIN_ROW             = 2         "Excel file start row  " 시작하는 세로값, 첫번째는 필드가 나오기 때문에
      I_END_COL               = 100                                       "오른쪽으로 100번째 까지
      I_END_ROW               = 50000                                 "세로로 50000번째 까지 가져옴.
    TABLES
      INTERN                  = GT_INTERN                            "엑셀에서 읽은 데이터를 인터널 테이블로 가져옴
      "ROW COL VALUE식으로 이루어져 있음. 값은 읽는 형태
    EXCEPTIONS
      INCONSISTENT_PARAMETERS = 1 "0이 아닌 값들을 정의 예외처리
      UPLOAD_OLE              = 2
      OTHERS                  = 3.

  IF P_FILE5 ='C:\'. "가져온 개수가 0이냐? 데이터가 없냐?
    MESSAGE S012 WITH TEXT-M02. " 만들어진 데이터가 없음.
    GV_ERROR = ABAP_TRUE. " 에러라고 찍어줌
    EXIT.
  ENDIF.


*  IF SY-SUBRC <> 0. "not equel
*    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
*  "스텐다드 메세지, 굳이 없어도 됨.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EXCEL_TO_ITAB2
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM EXCEL_TO_ITAB2 .


  DATA: LS_DBTAB TYPE ZPEN_LIM.
  DATA: LT_DBTAB LIKE TABLE OF LS_DBTAB.

  DATA: LS_EX5TA TYPE ZPEN_LIM. "스트럭쳐

  FIELD-SYMBOLS: <FS_COL>.

  CLEAR: GS_DATA2,    GT_DATA2.

  LOOP AT GT_INTERN.

*    ADD 1 TO GT_INTERN-COL.

    ASSIGN COMPONENT GT_INTERN-COL OF STRUCTURE "INTERN-COL 필드의 순서를 의미함. GT_DATA의 1, 2, 3, 4번째  필드
                                   GS_DATA2 TO <FS_COL>. "

    <FS_COL> = GT_INTERN-VALUE.
    "t_data-zyear = GT_INTERN-VALUE. 컬럼값이 2가 됨.

    AT END OF ROW. "ROW라는 필드가 끝날 때(반복되는 것이 끝날 때) 로우의 값이 바뀌기 전, 그때 어펜드가 됨. 키 값들은 바뀌지 않아야 함.
      "무저건 소팅이 되어 있어야 하며, 다음값을 체크함.
      APPEND GS_DATA2 TO GT_DATA2.
      CLEAR  GS_DATA2.
    ENDAT.

  ENDLOOP.

  " 값이 테이블 형식으로 들어갔음.

  LOOP AT GT_DATA2 INTO GS_DATA2.    "헤더가 첫번재부터 돌아감.
    MOVE-CORRESPONDING GS_DATA2 TO LS_DBTAB. "gt테이블 헤더에서 LT테이블 헤더로 옮겨줌.



    APPEND LS_DBTAB TO LT_DBTAB.
    CLEAR LS_DBTAB.

  ENDLOOP.

  DESCRIBE TABLE GT_DATA2 LINES GV_CNT.

  MODIFY ZPEN_LIM FROM TABLE LT_DBTAB.
  "모디파이는 인설트+업데이트임. 키에 값이 있으면 업데이트, 없으면 인설트 됨.


  "디비에 있는 테이블에 값을 넣을려면 형태가 똑같아야함. 테이블 타입이 정확히 일치해야함.
  CLEAR GT_INTERN.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SELECT_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SELECT_DATA .

*  DATA: LT_DD07V TYPE TABLE OF DD07V WITH HEADER LINE.

  CLEAR: GT_DISPLAY.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE @GT_DISPLAY
    FROM ZCUS_LIM
   WHERE C_NO  IN @S_C_NO
     AND C_NAME IN @S_C_NAME
         AND TELE IN @S_C_TELE
         AND PHONE IN @S_PHONE
         AND Y_COUNT IN @S_COUNT
         AND SIGN IN @S_SIGN
         AND TOTAL IN @S_TOTAL
         AND GRADE    IN @S_GRADE.

  CLEAR GV_ERROR.
  IF GT_DISPLAY[] IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S001 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

*  " Get Domain Value
*  CALL FUNCTION 'DD_DOMVALUES_GET'
*    EXPORTING
*      DOMNAME        = 'ZD_STAT'
*      TEXT           = 'X'
*      LANGU          = SY-LANGU
*    TABLES
*      DD07V_TAB      = LT_DD07V
*    EXCEPTIONS
*      WRONG_TEXTFLAG = 1
*      OTHERS         = 2.

  PERFORM COLOR_ICON.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_INSTANCE_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_INSTANCE_0100 .

  CREATE OBJECT GR_CON1 "
    EXPORTING
      CONTAINER_NAME = GV_CONTAINER. "

  CREATE OBJECT GR_GRID1 "그리드 만들기
    EXPORTING
      I_PARENT = GR_CON1. " 그리드는 항상 컨테이너 위에 올라감. 업어주는 형상.
  "컨테이너
  "그리드가 자식 클래스

ENDFORM.
*&---------------------------------------------------------------------*
*& Form APPEND_FIELDCAT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM APPEND_FIELDCAT_0100 .


  DATA: LV_DYNNR TYPE SY-DYNNR.
  LV_DYNNR = SY-DYNNR.

  "-- field catalog data
  "   field catalog merge or set fieldcatalog를 사용할 수 있음.

  "{ FIELDCATLOG MERGE 사용
  PERFORM GET_FIELDCATLOG_DATA USING LV_DYNNR.

  PERFORM MODIFY_FIELDCATLOG_DATA.
  "}

ENDFORM.
*&---------------------------------------------------------------------*
*& Form GET_FIELDCATLOG_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> LV_DYNNR
*&---------------------------------------------------------------------*
FORM GET_FIELDCATLOG_DATA  USING    P_DYNNR..


  DATA: LT_FIELDCAT TYPE KKBLO_T_FIELDCAT. "
  DATA: LV_TABNAME  TYPE DD02L-TABNAME.


  IF  P_ALV EQ ABAP_TRUE.
    LV_TABNAME = 'GT_DISPLAY'.
  ELSEIF P_ALMOST EQ ABAP_TRUE.
    LV_TABNAME = 'GT_ALMOST'.
  ENDIF.


  CALL FUNCTION 'K_KKB_FIELDCAT_MERGE' "
    EXPORTING
      I_CALLBACK_PROGRAM     = SY-REPID "
      I_TABNAME              = LV_TABNAME "
    " I_STRUCNAME            = 'ZEDU20_EX0ST' "ABAP DIC. 정의된 STRUCTURE
      I_BYPASSING_BUFFER     = ABAP_TRUE "버퍼에 올림. 필드가 바뀌면 갱신하기 위해서
      I_INCLNAME             = SY-REPID ""
    CHANGING
      CT_FIELDCAT            = LT_FIELDCAT[]
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      OTHERS                 = 2.

  IF SY-SUBRC EQ 0.

    "-- Trasnfer LVC.
    CALL FUNCTION 'LVC_TRANSFER_FROM_KKBLO' "
      EXPORTING
        IT_FIELDCAT_KKBLO = LT_FIELDCAT[]
      IMPORTING
        ET_FIELDCAT_LVC   = GT_FIELDCAT[] "AVL 타입으로 컨버전을 하는 것..
      EXCEPTIONS
        IT_DATA_MISSING   = 1.
  ELSE.

    " Error Fieldcatalog merge!!
    MESSAGE E000 WITH 'Error Fieldcatalog merge!!'.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form DISPLAY_ALV_GRID_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY_ALV_GRID_0100 .

  GS_VARIANT-REPORT = SY-REPID. "현재 프로그램.

  GV_SAVE = 'A'. "ALV의 레이아웃을 어떤식으로 저장할 것이냐.

  "*-- Build field catalog for the alv control
  CALL METHOD GR_GRID1->SET_TABLE_FOR_FIRST_DISPLAY "
  "그리드를 스크린에 불러옴.
    EXPORTING
      I_DEFAULT                     = ABAP_TRUE
      IS_LAYOUT                     = GS_LAYOUT
      IS_VARIANT                    = GS_VARIANT
      I_SAVE                        = GV_SAVE
      IT_TOOLBAR_EXCLUDING          = GT_EXCLUDE " 기능버튼을 뺄때.
    CHANGING
      IT_FIELDCATALOG               = GT_FIELDCAT "
      IT_SORT                       = GT_SORT
      IT_OUTTAB                     = GT_DISPLAY[]
    EXCEPTIONS
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3.

  IF SY-SUBRC NE 0.
    MESSAGE E000(0K) WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REFRESH_GRID_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM REFRESH_GRID_0100 .


  GS_STABLE-ROW = ABAP_TRUE. "Row
  GS_STABLE-COL = ABAP_TRUE. "column

  CALL METHOD GR_GRID1->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = GS_STABLE
      I_SOFT_REFRESH = SPACE.

  CALL METHOD CL_GUI_CFW=>FLUSH.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SELECT_ALMOST
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SELECT_ALMOST .

  DATA: GV_CALC_DATE TYPE DATS.

  DATA: GV_DAYS   TYPE VTBBEWE-ATAGE, "타입은 INT4
        GV_MONTHS TYPE VTBBEWE-ATAGE,
        GV_YEARS  TYPE VTBBEWE-ATAGE.

  CLEAR: GT_DISPLAY.

  SELECT *
      INTO CORRESPONDING FIELDS OF TABLE @GT_DISPLAY
      FROM ZCUS_LIM.



  LOOP AT GT_DISPLAY.

    CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
      EXPORTING
        DATE      = GT_DISPLAY-SIGN
        DAYS      = 00 "두자리까지만
        MONTHS    = 00
        SIGNUM    = '+' "전으로 할건지 앞으로 할건지
        YEARS     = GT_DISPLAY-Y_COUNT
      IMPORTING
        CALC_DATE = GV_CALC_DATE.



    CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
      EXPORTING
        I_DATE_FROM = SY-DATUM
        I_DATE_TO   = GV_CALC_DATE
      IMPORTING
        E_DAYS      = GV_DAYS
        E_MONTHS    = GV_MONTHS
        E_YEARS     = GV_YEARS.

    IF GV_DAYS <= 90 AND GV_DAYS > 0 .

      APPEND GT_DISPLAY TO GT_ALMOST.

    ENDIF.


  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_INSTANCE_0200
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_INSTANCE_0200 .

  CREATE OBJECT GR_CON2 "
    EXPORTING
      CONTAINER_NAME = GV_CONTAINER2. "

  CREATE OBJECT GR_GRID2 "그리드 만들기
    EXPORTING
      I_PARENT = GR_CON2. " 그리드는 항상 컨테이너 위에 올라감. 업어주는 형상.
  "컨테이너
  "그리드가 자식 클래스

ENDFORM.
*&---------------------------------------------------------------------*
*& Form APPEND_FIELDCAT_0200
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM APPEND_FIELDCAT_0200 .


  DATA: LV_DYNNR TYPE SY-DYNNR.
  LV_DYNNR = SY-DYNNR.

  "-- field catalog data
  "   field catalog merge or set fieldcatalog를 사용할 수 있음.

  "{ FIELDCATLOG MERGE 사용
  PERFORM GET_FIELDCATLOG_DATA USING LV_DYNNR.

*  PERFORM MODIFY_FIELDCATLOG_DATA.
  "}

ENDFORM.
*&---------------------------------------------------------------------*
*& Form DISPLAY_ALV_GRID_0200
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM DISPLAY_ALV_GRID_0200 .

  GS_VARIANT-REPORT = SY-REPID. "현재 프로그램.

  GV_SAVE = 'A'. "ALV의 레이아웃을 어떤식으로 저장할 것이냐.

  "*-- Build field catalog for the alv control
  CALL METHOD GR_GRID2->SET_TABLE_FOR_FIRST_DISPLAY "
  "그리드를 스크린에 불러옴.
    EXPORTING
      I_DEFAULT                     = ABAP_TRUE
      IS_LAYOUT                     = GS_LAYOUT
      IS_VARIANT                    = GS_VARIANT
      I_SAVE                        = GV_SAVE
      IT_TOOLBAR_EXCLUDING          = GT_EXCLUDE " 기능버튼을 뺄때.
    CHANGING
      IT_FIELDCATALOG               = GT_FIELDCAT "
      IT_SORT                       = GT_SORT
      IT_OUTTAB                     = GT_ALMOST[]
    EXCEPTIONS
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3.

  IF SY-SUBRC NE 0.
    MESSAGE E000(0K) WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form REFRESH_GRID_0200
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM REFRESH_GRID_0200 .


  GS_STABLE-ROW = ABAP_TRUE. "Row
  GS_STABLE-COL = ABAP_TRUE. "column

  CALL METHOD GR_GRID2->REFRESH_TABLE_DISPLAY
    EXPORTING
      IS_STABLE      = GS_STABLE
      I_SOFT_REFRESH = SPACE.

  CALL METHOD CL_GUI_CFW=>FLUSH.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form CHECK_FEILD
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CHECK_FEILD .


  CLEAR : GV_ERROR.

  IF C_C_NO IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M11 DISPLAY LIKE 'E'.

  ELSEIF C_C_NAME IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M12 DISPLAY LIKE 'E'.

  ELSEIF C_C_TELE IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M13 DISPLAY LIKE 'E'.

  ELSEIF C_PHONE IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M14 DISPLAY LIKE 'E'.

  ELSEIF C_COUNT IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M15 DISPLAY LIKE 'E'.

  ELSEIF C_SIGN IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M16 DISPLAY LIKE 'E'.

  ELSEIF C_TOTAL IS INITIAL.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-M17 DISPLAY LIKE 'E'.

  ENDIF.




ENDFORM.
*&---------------------------------------------------------------------*
*& Form CREATE_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM CREATE_DATA .

  CLEAR GV_ERROR.
  DATA: LV_CNO TYPE ZCUS_LIM-C_NO.
  DATA : LS_ZCUS_LIM TYPE ZCUS_LIM.
  DATA: LV_TELE TYPE ZTELE_LIM-TELE.
  DATA: LV_PHONE TYPE ZPHONE_LIM-PHONE.



  "데이터 있는지 체크
  SELECT SINGLE C_NO
    INTO LV_CNO
    FROM ZCUS_LIM
    WHERE C_NO EQ C_C_NO-LOW.

  IF SY-SUBRC EQ 0.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-E01 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

*--------------------------------------
*계약년수 3년 초과면 에러
  IF C_COUNT-LOW > 3 .
    MESSAGE S018 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

*--------------------------------------
  "
  SELECT SINGLE TELE
    INTO LV_TELE
    FROM ZTELE_LIM
    WHERE TELE EQ C_C_TELE-LOW.

  IF SY-SUBRC NE 0.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-E02 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.

*---------------------------------------
  SELECT SINGLE PHONE
  INTO LV_PHONE
  FROM ZPHONE_LIM
  WHERE PHONE EQ C_PHONE-LOW.

  IF SY-SUBRC NE 0.
    GV_ERROR = 'X'.
    MESSAGE S000 WITH TEXT-E03 DISPLAY LIKE 'E'.
    EXIT.
  ENDIF.


  LS_ZCUS_LIM-C_NO = C_C_NO-LOW.
  LS_ZCUS_LIM-C_NAME = C_C_NAME-LOW.
  LS_ZCUS_LIM-TELE = C_C_TELE-LOW.
  LS_ZCUS_LIM-PHONE = C_PHONE-LOW.
  LS_ZCUS_LIM-Y_COUNT = C_COUNT-LOW.
  LS_ZCUS_LIM-SIGN = C_SIGN-LOW.
  LS_ZCUS_LIM-TOTAL = C_TOTAL-LOW.


*  SELECT SINGLE TELE
*    FROM ZTELE_LIM
*    WHERE TELE EQ C_C_NO-LOW.


  IF LS_ZCUS_LIM-TOTAL >= 30.
    LS_ZCUS_LIM-GRADE = 'VIP'.
  ELSEIF LS_ZCUS_LIM-TOTAL >= 20.
    LS_ZCUS_LIM-GRADE = '감사한분'.
  ELSEIF LS_ZCUS_LIM-TOTAL >= 10.
    LS_ZCUS_LIM-GRADE = '고마운분'.
  ELSE.
    LS_ZCUS_LIM-GRADE = '일반'.
  ENDIF.


*  MOVE-CORRESPONDING GS_CREA TO LS_Z20_HR1. "
  INSERT ZCUS_LIM FROM LS_ZCUS_LIM. "인설트를 할때 데

  MESSAGE I017  WITH LS_ZCUS_LIM-C_NAME LS_ZCUS_LIM-GRADE .

ENDFORM.
*&---------------------------------------------------------------------*
*& Form INIT_LAYOUT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM INIT_LAYOUT_0100 .

*GS_LAYOUT-EDIT_MODE  = ABAP_TRUE. "편집모드
  GS_LAYOUT-ZEBRA      = ABAP_TRUE.  "줄무늬를 줌. 얼룩말
*  GS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.  "최적화, 필드캣이랑 똑같음.
*  GS_LAYOUT-SEL_MODE   = 'A'.     "B:단일,C:복수,D:셀,A:행/열
*                                                  "B를 주면 단일라인씩 선택 가능
*                                                  "C 복수라인 선택가능, 스크롤
* "                  D 한 셀단위로 선택 가능. 박스버튼이 생기고  라인을 선택하는 기능 생성
*                      "A 행과열 생김.
*  GS_LAYOUT-NO_ROWMARK = SPACE. "한줄 선택 없애주는 기능.
* "SEL모드랑 로우마크랑 연관이 있음,
*
*  GS_LAYOUT-KEYHOT = 'X'. "키 필드 누를 수 있음
*  GS_LAYOUT-NO_HEADERS = SPACE. "페이지 245
  GS_LAYOUT-INFO_FNAME = 'LCOLOR'.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form SET_GRID_EXCLUDE_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM SET_GRID_EXCLUDE_0100 .

  DATA: LS_EXCLUDE LIKE LINE OF GT_EXCLUDE.
  REFRESH: GT_EXCLUDE.

  "-- DEFINE _SET_EX
  DEFINE _SET_EX.
    CLEAR: LS_EXCLUDE.
    LS_EXCLUDE = &1.
    APPEND LS_EXCLUDE TO GT_EXCLUDE.
  END-OF-DEFINITION.

  _SET_EX:
*   CL_GUI_ALV_GRID=>MC_FC_FIND,
   CL_GUI_ALV_GRID=>MC_FC_SORT_ASC,
   CL_GUI_ALV_GRID=>MC_FC_SORT_DSC,
*   CL_GUI_ALV_GRID=>MC_MB_SUBTOT,
*   CL_GUI_ALV_GRID=>MC_MB_SUM,
*
    CL_GUI_ALV_GRID=>MC_FC_LOC_COPY_ROW,
    CL_GUI_ALV_GRID=>MC_FC_LOC_APPEND_ROW,
    CL_GUI_ALV_GRID=>MC_FC_LOC_INSERT_ROW,
    CL_GUI_ALV_GRID=>MC_FC_LOC_MOVE_ROW,
*    CL_GUI_ALV_GRID=>MC_FC_LOC_DELETE_ROW,
*    CL_GUI_ALV_GRID=>MC_FC_LOC_COPY,
*    CL_GUI_ALV_GRID=>MC_FC_LOC_CUT,
*    CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE,
    CL_GUI_ALV_GRID=>MC_FC_LOC_PASTE_NEW_ROW,
    CL_GUI_ALV_GRID=>MC_FC_LOC_UNDO,
    CL_GUI_ALV_GRID=>MC_FC_CHECK,

*   CL_GUI_ALV_GRID=>MC_FC_DETAIL,
*   CL_GUI_ALV_GRID=>MC_FC_FILTER,
    CL_GUI_ALV_GRID=>MC_FC_GRAPH,
*    CL_GUI_ALV_GRID=>MC_FC_HTML,
    CL_GUI_ALV_GRID=>MC_FC_INFO,
    CL_GUI_ALV_GRID=>MC_FC_REFRESH,

*   CL_GUI_ALV_GRID=>MC_FC_VIEWS,
*   CL_GUI_ALV_GRID=>MC_FC_LOAD_VARIANT,
*   CL_GUI_ALV_GRID=>MC_FC_PRINT,
*   CL_GUI_ALV_GRID=>MC_MB_VARIANT,
*   CL_GUI_ALV_GRID=>MC_MB_EXPORT,

    CL_GUI_ALV_GRID=>MC_FC_VIEW_CRYSTAL,
    CL_GUI_ALV_GRID=>MC_FC_VIEW_EXCEL,
    CL_GUI_ALV_GRID=>MC_FC_VIEW_GRID,
    CL_GUI_ALV_GRID=>MC_FC_VIEW_LOTUS,
    CL_GUI_ALV_GRID=>MC_FC_EXPCRDATA,
    CL_GUI_ALV_GRID=>MC_FC_EXPCRDESIG,
    CL_GUI_ALV_GRID=>MC_FC_EXPCRTEMPL,
    CL_GUI_ALV_GRID=>MC_FC_CALL_ABC,
    CL_GUI_ALV_GRID=>MC_FC_CALL_CRBATCH.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form MODIFY_FIELDCATLOG_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM MODIFY_FIELDCATLOG_DATA .

  DATA:  LV_TEXT(50).

  "--- Change Fieldcat.
  LOOP AT GT_FIELDCAT INTO GS_FIELDCAT.
    CLEAR: LV_TEXT.

    "-- Change fieldcat Attribute
    CASE GS_FIELDCAT-FIELDNAME.
      WHEN 'CHECK'.
        LV_TEXT = TEXT-F01.
        GS_FIELDCAT-CHECKBOX = 'X'.
        GS_FIELDCAT-EDIT = 'X'. "수정가능.
*        GS_FIELDCAT-KEY = 'X'.
      WHEN 'C_NO'.
        LV_TEXT = TEXT-F02.
*        GS_FIELDCAT-ICON = 'X'.

      WHEN 'C_NAME'.
        LV_TEXT = TEXT-F03.

      WHEN 'TELE'.
        LV_TEXT = TEXT-F04.

      WHEN 'PHONE'.
        LV_TEXT = TEXT-F05.

      WHEN 'SIGN'.
        LV_TEXT = TEXT-F06.
      WHEN 'Y_COUNT'.
        LV_TEXT = TEXT-F07.
      WHEN 'TOTAL'.
        LV_TEXT = TEXT-F08.
      WHEN 'GRADE'.
        LV_TEXT = TEXT-F09.
      WHEN 'ICON'.
        LV_TEXT = TEXT-F10.
*        GS_FIELDCAT-ICON = 'X'.

      WHEN OTHERS.
        GS_FIELDCAT-NO_OUT = ABAP_TRUE.
    ENDCASE.
    "Column Optimizer
    GS_FIELDCAT-COL_OPT = ABAP_TRUE.

    "-- Common attribute
    IF LV_TEXT IS NOT INITIAL.
      GS_FIELDCAT-COLTEXT   = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_L = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_M = LV_TEXT.
      GS_FIELDCAT-SCRTEXT_S = LV_TEXT.
    ENDIF.

    MODIFY GT_FIELDCAT FROM GS_FIELDCAT.
  ENDLOOP.


ENDFORM.
*&---------------------------------------------------------------------*
*& Form REGIST_ALV_EVENT_0100
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> GR_GRID1
*&---------------------------------------------------------------------*
FORM REGIST_ALV_EVENT_0100  USING    PR_GRID TYPE REF TO CL_GUI_ALV_GRID.

* REGISTER EVENT
  CALL METHOD PR_GRID->REGISTER_EDIT_EVENT
  "이벤트를 등록한다. 실제로 그리드가 받음.
    EXPORTING
      I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED.
  "이벤트를 받는 공간이 생김.
  "
*  CALL METHOD PR_GRID->SET_READY_FOR_INPUT
*    EXPORTING
*      I_READY_FOR_INPUT = 1.

*-- GR_EVENT_RECEIVER
  IF GR_EVENT_RECEIVER IS INITIAL.
    CREATE OBJECT GR_EVENT_RECEIVER.
    "우리가 만든 이벤트 리시버 생성됨, 그리드, 컨테이너같은 개념. 이벤트를 받아주는 곳.
  ENDIF.

* Handler Event
  SET HANDLER:
    GR_EVENT_RECEIVER->HANDLE_TOOLBAR   FOR ALL INSTANCES,
*    GR_EVENT_RECEIVER->HANDLE_DATA_CHANGED  FOR ALL INSTANCES,
*    GR_EVENT_RECEIVER->HANDLE_DATA_CHANGED_FINISHED
*      FOR ALL INSTANCES,
    GR_EVENT_RECEIVER->HANDLE_USER_COMMAND  FOR ALL INSTANCES,
*    GR_EVENT_RECEIVER->HANDLE_HOTSPOT_CLICK FOR ALL INSTANCES,
   GR_EVENT_RECEIVER->HANDLE_DOUBLE_CLICK  FOR ALL INSTANCES.
*    GR_EVENT_RECEIVER->HANDLE_ONF4          FOR ALL INSTANCES.

*  PERFORM REGI_F4.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form COLOR_ICON
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM COLOR_ICON .

  DATA: LV_CALC_DATE TYPE DATS.

  DATA: LV_DAYS   TYPE VTBBEWE-ATAGE, "타입은 INT4
        LV_MONTHS TYPE VTBBEWE-ATAGE,
        LV_YEARS  TYPE VTBBEWE-ATAGE.

  LOOP AT GT_DISPLAY.

    CALL FUNCTION 'RP_CALC_DATE_IN_INTERVAL'
      EXPORTING
        DATE      = GT_DISPLAY-SIGN
        DAYS      = 00 "두자리까지만
        MONTHS    = 00
        SIGNUM    = '+' "전으로 할건지 앞으로 할건지
        YEARS     = GT_DISPLAY-Y_COUNT
      IMPORTING
        CALC_DATE = LV_CALC_DATE.



    CALL FUNCTION 'FIMA_DAYS_AND_MONTHS_AND_YEARS'
      EXPORTING
        I_DATE_FROM = SY-DATUM
        I_DATE_TO   = LV_CALC_DATE
      IMPORTING
        E_DAYS      = LV_DAYS
        E_MONTHS    = LV_MONTHS
        E_YEARS     = LV_YEARS.

    IF LV_DAYS <= 90 AND LV_DAYS > 0 .
      GT_DISPLAY-ICON = ICON_LED_RED.

    ELSEIF LV_DAYS = 0.
      GT_DISPLAY-ICON = ICON_LED_GREEN.

    ELSE.
      GT_DISPLAY-ICON = ICON_LED_YELLOW.
    ENDIF.

    MODIFY GT_DISPLAY[] FROM GT_DISPLAY.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EVENT_TOOLBAR
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_OBJECT
*&      --> E_INTERACTIVE
*&      --> SENDER
*&---------------------------------------------------------------------*
FORM EVENT_TOOLBAR  USING  PR_OBJECT TYPE REF TO CL_ALV_EVENT_TOOLBAR_SET
                          PV_INTERACTIVE TYPE CHAR01
                          PR_SENDER TYPE REF TO CL_GUI_ALV_GRID.

* - Prefix #¤## - Form Parameter
*   1. PT_  : Internal Table or Ranges
*   2. PS_  : Structure
*   3. PV_  : Variables
*   4. PR_ : Reference Variables

* - BUTTON TYPE - BTYPE.
*  0 버튼(일반)
*  1 메뉴 및 기본 버튼
*  2 메뉴
*  3 분리자
*  4 라디오 버튼
*  5 체크박스
*  6 메뉴 엔트리

  CASE PR_SENDER.
    WHEN GR_GRID1.

      "ADD_BUTTON : OBJECT, BTYPE, FUNC, ICON, INFO, TEXT, DISABLE
      PERFORM ADD_BUTTON
      USING: PR_OBJECT '3' SPACE SPACE SPACE SPACE SPACE,  "분리자

      PR_OBJECT '0' '&ASEL' ICON_SELECT_ALL TEXT-BT1 TEXT-BT1 SPACE ,

      PR_OBJECT '0' '&DSEL' ICON_DESELECT_ALL TEXT-BT2 TEXT-BT2 SPACE,

      PR_OBJECT '0' '&CHAN' ICON_CHANGE TEXT-BT3 TEXT-BT3 SPACE,

      PR_OBJECT '0' '&RAND' ICON_ACTIVE_INACTIVE TEXT-BT4 TEXT-BT4 SPACE,

      PR_OBJECT '0' '&DELE' ICON_DELETE TEXT-BT5 TEXT-BT5 SPACE,

      PR_OBJECT '0' '&SAVE1' ICON_SYSTEM_SAVE TEXT-BT6 TEXT-BT6 SPACE.

*      PR_OBJECT '0' '&DEL' ICON_DELETE_ROW TEXT-BT3
*      TEXT-BT3 SPACE.

    WHEN OTHERS.
  ENDCASE.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form EVENT_USER_COMMAND
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> E_UCOMM
*&      --> SENDER
*&---------------------------------------------------------------------*
FORM EVENT_USER_COMMAND USING PV_UCOMM TYPE SY-UCOMM
                               PR_SENDER TYPE REF TO CL_GUI_ALV_GRID.


* - PREFIX 정의 - FORM PARAMETER
*   1. PT_  : Internal Table or Ranges
*   2. PS_  : Structure
*   3. PV_  : Variables
*   4. PR_  : Reference Variables

  DATA: LT_DISPLAY LIKE TABLE OF GT_DISPLAY.
  DATA: LV_CNT TYPE I.
  DATA: GIFT_CNT TYPE I.
  DATA: LS_CUS LIKE TABLE OF ZCUS_LIM WITH HEADER LINE.

  "GRID에 따라 처리.
  CASE PR_SENDER.
    WHEN GR_GRID1.
      CASE PV_UCOMM.
        WHEN '&ASEL'.   "-- 전체선택
          CLEAR GT_DISPLAY.
          LOOP AT GT_DISPLAY  WHERE CHECK IS INITIAL.
            GT_DISPLAY-CHECK = 'X'.
            MODIFY GT_DISPLAY[] FROM GT_DISPLAY.
          ENDLOOP.
          " REFRESH
          PERFORM REFRESH_GRID_0100.

        WHEN '&DSEL'.   "-- 전체선택해제
          CLEAR GT_DISPLAY.
          LOOP AT GT_DISPLAY WHERE CHECK IS NOT INITIAL.
            CLEAR GT_DISPLAY-CHECK.
            MODIFY GT_DISPLAY[] FROM GT_DISPLAY.
          ENDLOOP.
          " REFRESH
          PERFORM REFRESH_GRID_0100.

        WHEN '&CHAN'.
          LOOP AT GT_DISPLAY WHERE CHECK IS NOT INITIAL.
            APPEND  GT_DISPLAY TO LT_DISPLAY[].
          ENDLOOP.

          DESCRIBE TABLE LT_DISPLAY LINES GV_CNT.


          IF GV_CNT = 0.
            MESSAGE I020.
            EXIT.
          ELSEIF GV_CNT >= 2.
            MESSAGE I019.
            EXIT.
          ENDIF.


          LOOP AT GT_DISPLAY WHERE CHECK IS NOT INITIAL.
            CALL SCREEN '0110' STARTING AT 5 5.
          ENDLOOP.
          PERFORM REFRESH_GRID_0100.

          CLEAR: LT_DISPLAY[], LT_DISPLAY, GV_CNT.

        WHEN '&RAND'.   "--

          SELECT *
            INTO CORRESPONDING FIELDS OF TABLE  GT_GIFT
              FROM ZPRA_LIM.

          DESCRIBE TABLE GT_DISPLAY LINES LV_CNT.

          DATA: RANDOM TYPE I.

          CALL FUNCTION 'QF05_RANDOM_INTEGER'
            EXPORTING
              RAN_INT_MAX   = LV_CNT "max number
              RAN_INT_MIN   = 1 "minumn number
            IMPORTING
              RAN_INT       = RANDOM       "random number
            EXCEPTIONS
              INVALID_INPUT = 1
              OTHERS        = 2.

          READ TABLE GT_DISPLAY INDEX RANDOM.

          DESCRIBE TABLE GT_GIFT LINES GIFT_CNT.

          DATA: RANDOM2 TYPE I.

          CALL FUNCTION 'QF05_RANDOM_INTEGER'
            EXPORTING
              RAN_INT_MAX   = GIFT_CNT "max number
              RAN_INT_MIN   = 1 "minumn number
            IMPORTING
              RAN_INT       = RANDOM2       "random number
            EXCEPTIONS
              INVALID_INPUT = 1
              OTHERS        = 2.

          READ TABLE GT_GIFT INDEX RANDOM2.

          CALL SCREEN '0120' STARTING AT 5 5.

          CLEAR: LV_CNT.

        WHEN '&DELE'.

          LOOP AT GT_DISPLAY WHERE CHECK IS NOT INITIAL.
            APPEND  GT_DISPLAY TO LT_DISPLAY[].
          ENDLOOP.

          DESCRIBE TABLE LT_DISPLAY LINES GV_CNT.

          IF GV_CNT = 0.
            MESSAGE I020.
            EXIT.
          ENDIF.

          DELETE GT_DISPLAY WHERE CHECK IS NOT INITIAL.
          PERFORM REFRESH_GRID_0100.
          MESSAGE S015 WITH GV_CNT.

        WHEN '&SAVE1'.

          DATA: LS_CUS_LIM TYPE ZCUS_LIM.
          DATA: LT_CUS_LIM LIKE TABLE OF LS_CUS_LIM.


          DELETE FROM ZCUS_LIM.

          LOOP AT GT_DISPLAY.
            MOVE-CORRESPONDING GT_DISPLAY TO LS_CUS_LIM.
            APPEND LS_CUS_LIM TO LT_CUS_LIM.
          ENDLOOP.

          MODIFY ZCUS_LIM FROM TABLE LT_CUS_LIM.

          PERFORM REFRESH_GRID_0100.

          MESSAGE S005.


      ENDCASE.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ADD_BUTTON
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> PR_OBJECT
*&      --> P_
*&      --> SPACE
*&      --> SPACE
*&      --> SPACE
*&      --> SPACE
*&      --> SPACE
*&---------------------------------------------------------------------*
FORM ADD_BUTTON  USING PR_OBJECT TYPE REF TO CL_ALV_EVENT_TOOLBAR_SET
                       PV_BTYPE
                       PV_FUNC
                       PV_ICON
                       PV_INFO
                       PV_TEXT
                       PV_DISA.

  DATA: LS_BUTTON TYPE STB_BUTTON,
        LS_BTNMNU TYPE STB_BTNMNU,

        LT_BUTTON TYPE TTB_BUTTON,
        LT_BTNMNU TYPE TTB_BTNMNU.

  CLEAR LS_BUTTON.
  LS_BUTTON-BUTN_TYPE = PV_BTYPE.
  LS_BUTTON-FUNCTION = PV_FUNC.
  LS_BUTTON-ICON = PV_ICON.
  LS_BUTTON-QUICKINFO = PV_INFO.

  LS_BUTTON-TEXT = PV_TEXT.
  LS_BUTTON-DISABLED = PV_DISA.

  APPEND LS_BUTTON TO PR_OBJECT->MT_TOOLBAR.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form MODIFY_INFO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM MODIFY_INFO .


  IF INPUT4 IS INITIAL.
    INPUT4 = INPUT3.

  ENDIF.

  IF INPUT6 IS INITIAL.
    INPUT6 = INPUT5.

  ENDIF.

  GT_DISPLAY-TELE = INPUT4.
  GT_DISPLAY-PHONE = INPUT6.

  CLEAR: GT_DISPLAY-CHECK.

  MODIFY GT_DISPLAY[] FROM GT_DISPLAY.

  CLEAR: INPUT4, INPUT6.

  MESSAGE S021.

ENDFORM.
*&---------------------------------------------------------------------*
*& Module STATUS_0120 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE STATUS_0120 OUTPUT.
  SET PF-STATUS 'PF_0110'.
* SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*& Form SHOW_PIC
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Form N
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*

-----------------------------------------------------------
Extracted by Mass Download version1.5.2 - E.G.Mellodew. 1998-2019. Sap Release753
